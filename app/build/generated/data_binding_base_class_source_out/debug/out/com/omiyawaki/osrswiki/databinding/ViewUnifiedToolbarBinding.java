// Generated by view binder compiler. Do not edit!
package com.omiyawaki.osrswiki.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.omiyawaki.osrswiki.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewUnifiedToolbarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View toolbarNotificationButtonPlaceholder;

  @NonNull
  public final ImageView toolbarOverflowMenuButton;

  @NonNull
  public final AppCompatTextView toolbarSearchContainer;

  @NonNull
  public final ImageView toolbarSearchIcon;

  @NonNull
  public final ImageView toolbarVoiceSearchButton;

  private ViewUnifiedToolbarBinding(@NonNull LinearLayout rootView,
      @NonNull View toolbarNotificationButtonPlaceholder,
      @NonNull ImageView toolbarOverflowMenuButton,
      @NonNull AppCompatTextView toolbarSearchContainer, @NonNull ImageView toolbarSearchIcon,
      @NonNull ImageView toolbarVoiceSearchButton) {
    this.rootView = rootView;
    this.toolbarNotificationButtonPlaceholder = toolbarNotificationButtonPlaceholder;
    this.toolbarOverflowMenuButton = toolbarOverflowMenuButton;
    this.toolbarSearchContainer = toolbarSearchContainer;
    this.toolbarSearchIcon = toolbarSearchIcon;
    this.toolbarVoiceSearchButton = toolbarVoiceSearchButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewUnifiedToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewUnifiedToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_unified_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewUnifiedToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.toolbar_notification_button_placeholder;
      View toolbarNotificationButtonPlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (toolbarNotificationButtonPlaceholder == null) {
        break missingId;
      }

      id = R.id.toolbar_overflow_menu_button;
      ImageView toolbarOverflowMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (toolbarOverflowMenuButton == null) {
        break missingId;
      }

      id = R.id.toolbar_search_container;
      AppCompatTextView toolbarSearchContainer = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSearchContainer == null) {
        break missingId;
      }

      id = R.id.toolbar_search_icon;
      ImageView toolbarSearchIcon = ViewBindings.findChildViewById(rootView, id);
      if (toolbarSearchIcon == null) {
        break missingId;
      }

      id = R.id.toolbar_voice_search_button;
      ImageView toolbarVoiceSearchButton = ViewBindings.findChildViewById(rootView, id);
      if (toolbarVoiceSearchButton == null) {
        break missingId;
      }

      return new ViewUnifiedToolbarBinding((LinearLayout) rootView,
          toolbarNotificationButtonPlaceholder, toolbarOverflowMenuButton, toolbarSearchContainer,
          toolbarSearchIcon, toolbarVoiceSearchButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
