// Generated by view binder compiler. Do not edit!
package com.omiyawaki.osrswiki.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textview.MaterialTextView;
import com.omiyawaki.osrswiki.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewCustomBottomNavBarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialTextView navMap;

  @NonNull
  public final MaterialTextView navMore;

  @NonNull
  public final MaterialTextView navNews;

  @NonNull
  public final MaterialTextView navSaved;

  @NonNull
  public final MaterialTextView navSearch;

  private ViewCustomBottomNavBarBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialTextView navMap, @NonNull MaterialTextView navMore,
      @NonNull MaterialTextView navNews, @NonNull MaterialTextView navSaved,
      @NonNull MaterialTextView navSearch) {
    this.rootView = rootView;
    this.navMap = navMap;
    this.navMore = navMore;
    this.navNews = navNews;
    this.navSaved = navSaved;
    this.navSearch = navSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewCustomBottomNavBarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewCustomBottomNavBarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_custom_bottom_nav_bar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewCustomBottomNavBarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nav_map;
      MaterialTextView navMap = ViewBindings.findChildViewById(rootView, id);
      if (navMap == null) {
        break missingId;
      }

      id = R.id.nav_more;
      MaterialTextView navMore = ViewBindings.findChildViewById(rootView, id);
      if (navMore == null) {
        break missingId;
      }

      id = R.id.nav_news;
      MaterialTextView navNews = ViewBindings.findChildViewById(rootView, id);
      if (navNews == null) {
        break missingId;
      }

      id = R.id.nav_saved;
      MaterialTextView navSaved = ViewBindings.findChildViewById(rootView, id);
      if (navSaved == null) {
        break missingId;
      }

      id = R.id.nav_search;
      MaterialTextView navSearch = ViewBindings.findChildViewById(rootView, id);
      if (navSearch == null) {
        break missingId;
      }

      return new ViewCustomBottomNavBarBinding((LinearLayout) rootView, navMap, navMore, navNews,
          navSaved, navSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
