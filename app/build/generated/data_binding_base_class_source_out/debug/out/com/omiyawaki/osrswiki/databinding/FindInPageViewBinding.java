// Generated by view binder compiler. Do not edit!
package com.omiyawaki.osrswiki.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.omiyawaki.osrswiki.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FindInPageViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView findInPageCount;

  @NonNull
  public final SearchView findInPageInput;

  @NonNull
  public final ImageButton findInPageNext;

  @NonNull
  public final ImageButton findInPagePrev;

  private FindInPageViewBinding(@NonNull LinearLayout rootView, @NonNull TextView findInPageCount,
      @NonNull SearchView findInPageInput, @NonNull ImageButton findInPageNext,
      @NonNull ImageButton findInPagePrev) {
    this.rootView = rootView;
    this.findInPageCount = findInPageCount;
    this.findInPageInput = findInPageInput;
    this.findInPageNext = findInPageNext;
    this.findInPagePrev = findInPagePrev;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FindInPageViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FindInPageViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.find_in_page_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FindInPageViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.find_in_page_count;
      TextView findInPageCount = ViewBindings.findChildViewById(rootView, id);
      if (findInPageCount == null) {
        break missingId;
      }

      id = R.id.find_in_page_input;
      SearchView findInPageInput = ViewBindings.findChildViewById(rootView, id);
      if (findInPageInput == null) {
        break missingId;
      }

      id = R.id.find_in_page_next;
      ImageButton findInPageNext = ViewBindings.findChildViewById(rootView, id);
      if (findInPageNext == null) {
        break missingId;
      }

      id = R.id.find_in_page_prev;
      ImageButton findInPagePrev = ViewBindings.findChildViewById(rootView, id);
      if (findInPagePrev == null) {
        break missingId;
      }

      return new FindInPageViewBinding((LinearLayout) rootView, findInPageCount, findInPageInput,
          findInPageNext, findInPagePrev);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
